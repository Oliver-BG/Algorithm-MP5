{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNZPK2fhoFGetsPvwtZwyc6",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Oliver-BG/Algorithm-MP5/blob/master/Fundamentals\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "metadata": {
        "id": "VWehnePSSJlu"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import csv\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import datetime\n",
        "import matplotlib.pyplot as plt\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = {\n",
        "    'Product ID': np.arange(1, 51),\n",
        "    'Product Name': ['Product' + str(i) for i in range(1,51)],\n",
        "    'Category' :  np.random.choice(['Electronics', 'Clothing', 'Home Goods'], size=50),\n",
        "    'Price' : np.round(np.random.uniform(10, 100, size=50), 2),\n",
        "    'Date Sold': pd.date_range('2022-01-01', periods=50)\n",
        "}\n",
        "\n",
        "for k,v in data.items():\n",
        "  print(f'{k} : {v}')\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sJ1d4AtVV5mw",
        "outputId": "04412e8c-67a3-412a-acc7-d45b318699f8"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Product ID : [ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\n",
            " 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48\n",
            " 49 50]\n",
            "Product Name : ['Product1', 'Product2', 'Product3', 'Product4', 'Product5', 'Product6', 'Product7', 'Product8', 'Product9', 'Product10', 'Product11', 'Product12', 'Product13', 'Product14', 'Product15', 'Product16', 'Product17', 'Product18', 'Product19', 'Product20', 'Product21', 'Product22', 'Product23', 'Product24', 'Product25', 'Product26', 'Product27', 'Product28', 'Product29', 'Product30', 'Product31', 'Product32', 'Product33', 'Product34', 'Product35', 'Product36', 'Product37', 'Product38', 'Product39', 'Product40', 'Product41', 'Product42', 'Product43', 'Product44', 'Product45', 'Product46', 'Product47', 'Product48', 'Product49', 'Product50']\n",
            "Category : ['Electronics' 'Home Goods' 'Clothing' 'Home Goods' 'Clothing'\n",
            " 'Electronics' 'Clothing' 'Electronics' 'Electronics' 'Home Goods'\n",
            " 'Home Goods' 'Clothing' 'Home Goods' 'Home Goods' 'Clothing'\n",
            " 'Electronics' 'Clothing' 'Electronics' 'Electronics' 'Home Goods'\n",
            " 'Electronics' 'Electronics' 'Home Goods' 'Clothing' 'Clothing'\n",
            " 'Electronics' 'Clothing' 'Clothing' 'Electronics' 'Electronics'\n",
            " 'Clothing' 'Home Goods' 'Clothing' 'Home Goods' 'Home Goods' 'Clothing'\n",
            " 'Clothing' 'Electronics' 'Clothing' 'Clothing' 'Home Goods' 'Electronics'\n",
            " 'Clothing' 'Clothing' 'Electronics' 'Home Goods' 'Clothing' 'Electronics'\n",
            " 'Clothing' 'Electronics']\n",
            "Price : [14.06 66.52 96.74 63.77 32.71 67.33 80.98 56.27 56.58 60.6  31.78 87.48\n",
            " 32.92 66.74 36.67 71.22 62.44 75.6  37.56 67.3  48.89 88.46 22.86 91.15\n",
            " 83.5  66.64 85.46 38.79 85.59 54.83 64.69 99.16 71.67 40.56 15.81 64.16\n",
            " 42.81 99.56 78.63 96.98 88.99 92.24 17.25 35.36 45.31 11.51 58.49 17.66\n",
            " 71.19 47.28]\n",
            "Date Sold : DatetimeIndex(['2022-01-01', '2022-01-02', '2022-01-03', '2022-01-04',\n",
            "               '2022-01-05', '2022-01-06', '2022-01-07', '2022-01-08',\n",
            "               '2022-01-09', '2022-01-10', '2022-01-11', '2022-01-12',\n",
            "               '2022-01-13', '2022-01-14', '2022-01-15', '2022-01-16',\n",
            "               '2022-01-17', '2022-01-18', '2022-01-19', '2022-01-20',\n",
            "               '2022-01-21', '2022-01-22', '2022-01-23', '2022-01-24',\n",
            "               '2022-01-25', '2022-01-26', '2022-01-27', '2022-01-28',\n",
            "               '2022-01-29', '2022-01-30', '2022-01-31', '2022-02-01',\n",
            "               '2022-02-02', '2022-02-03', '2022-02-04', '2022-02-05',\n",
            "               '2022-02-06', '2022-02-07', '2022-02-08', '2022-02-09',\n",
            "               '2022-02-10', '2022-02-11', '2022-02-12', '2022-02-13',\n",
            "               '2022-02-14', '2022-02-15', '2022-02-16', '2022-02-17',\n",
            "               '2022-02-18', '2022-02-19'],\n",
            "              dtype='datetime64[ns]', freq='D')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a pandas DataFrame \n",
        "sales_df = pd.DataFrame(data)\n",
        "\n",
        "# Load the data from the CSV file (if applicable) #\n",
        "\n",
        "\"\"\"sales_df = pd.read_csv('sales_data.csv')\"\"\"\n",
        "\n",
        "# Data cleaning\n",
        "sales_df = sales_df.drop_duplicates() \n",
        "sales_df = sales_df.dropna()\n",
        "\n",
        "# Exploratory data analysis\n",
        "total_sales_by_product = sales_df.groupby('Product Name')['Price'].sum().sort_values(ascending=False)"
      ],
      "metadata": {
        "id": "_JU8Q_lLTuk_"
      },
      "execution_count": 39,
      "outputs": []
    }
  ]
}